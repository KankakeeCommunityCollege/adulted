// Custom JS for Slick img carousels

$('.hero-slider__slider').slick({
  dots: true,
  slidesToShow: 1,
  slidesToScroll: 1,
  autoplay: true,
  autoplaySpeed: 3000,
  prevArrow:'<img alt="" class="a-left control-c prev slick-prev" src="assets/img/dbl-prev.svg">',
  nextArrow:'<img alt="" class="a-right control-c next slick-next" src="assets/img/dbl-next.svg">'
});

// Lazy load images
// ex. <img data-src="/path/to/image.jpg" alt="">
$(document).ready(function(){
  (function() {
    [].forEach.call(document.querySelectorAll('img[data-src]'), function(img) {
      img.setAttribute('src', img.getAttribute('data-src'));
      img.onload = function() {
        img.removeAttribute('data-src');
      };
    });
  })();
});

// Highlights the current page in local navigation bar
$(document).ready(function () {
  var currentUrl = window.location.href;
  var noProto = currentUrl.replace(/(^\w+:|^)\/\//, '');
  $('#navbarSupportedContent').find('.active').removeClass('active');
  if (noProto == 'foundation.kcc.edu/' || noProto == 'localhost:3000/' ) {
    $('#home').addClass('active');
  } else if (currentUrl.indexOf('/events/') > -1) {
    $('#events').addClass('active');
  } else if (currentUrl.indexOf('/about/') > -1) {
    $('#about').addClass('active');
  } else if (currentUrl.indexOf('/alumni/') > -1) {
    $('#alumni').addClass('active');
  } else if (currentUrl.indexOf('/scholarships/') > -1) {
    $('#scholarships').addClass('active');
  } else if (currentUrl.indexOf('#contact') > -1) {
    $('#home').addClass('active');
  }
});

// Custom JS to animate and show the shop Amazon Smile widget
// ===================================================================
$(document).ready(function () {

  var smileWrapper = $('#shopSmileWrapper');

  //function addShaddow() {
  //  var smileTab = $('#smileTab');
  //  setTimeout(function(){
  //    smileTab.addClass('shop-smile__tab--shaddow');
  //  }, 1200);
  //}
  //function removeShaddow() {
  //  var smileTab = $('#smileTab');
  //  smileTab.removeClass('shop-smile__tab--shaddow');
  //}

  if( sessionStorage.clickcount == undefined ) { // if the clickcount is undefined:
    // set the clickcount to 0:
    sessionStorage.clickcount = 0;
  }

  smileWrapper.attr('data-close', sessionStorage.clickcount);

  function animateIn() {
    // Function to animate the slide-in of the amazon smile slide-box
    var deferShowShopSmile = $.Deferred();

    $.when(deferShowShopSmile).done(function() {
      smileWrapper.addClass('shop-smile__wrapper--show');
    });

    function animateShopSmile() {
      smileWrapper.addClass('shop-smile__wrapper--slide-in');
      //$('#greyOut').addClass('shop-smile__grey-out--animate')
      //  .addClass('shop-smile__grey-out--show');
      deferShowShopSmile.resolve();
    }
    animateShopSmile();
  }

  // Run the slide-box animation on page-load after a delay:
  function showShopSmile() {
    if ( smileWrapper.attr('data-close') == 0 ) {
      setTimeout(function(){
        //removeShaddow();
        animateIn();
      }, 2000);
    }
  }
  //  if( localStorage.getItem('user_visted') != 'true' ){
  showShopSmile();
  //    localStorage.setItem('user_visted', 'true');
  //  }

  // Closing the amazon smile slide-box
  function closeSmileWidget() {
    $('#exitButton').click(function() {
      smileWrapper.removeClass('shop-smile__wrapper--slide-in');
      smileWrapper.removeClass('shop-smile__wrapper--show');
      smileWrapper.addClass('shop-smile__wrapper--slide-out');
      clickCounter();
      //$('#greyOut').removeClass('shop-smile__grey-out--animate')
      //  .addClass('shop-smile__grey-out--animate-out')
      //  .removeClass('shop-smile__grey-out--show');
      //addShaddow();
    });
  }
  closeSmileWidget();

  // Reopening the slide-box by clicking it's minimized tab:
  function openSmile() {
    $('#openSmile').on('click', function() {
      //console.log('clicked');
      var wrapperClasses = smileWrapper.hasClass('shop-smile__wrapper--show');
      //console.log(wrapperClasses);
      if ( wrapperClasses == true ) {
        //console.log('show');
        smileWrapper.removeClass('shop-smile__wrapper--slide-in');
        smileWrapper.removeClass('shop-smile__wrapper--show');
        //addShaddow();
        smileWrapper.addClass('shop-smile__wrapper--slide-out');
        clickCounter();
      } else {
        //console.log('NO');
        smileWrapper.removeClass('shop-smile__wrapper--slide-out');
        //removeShaddow();
        animateIn();
      }
    });
  }
  openSmile();

  function clickCounter() {
    if(typeof(Storage) !== 'undefined') {
      if (sessionStorage.clickcount) {
        sessionStorage.clickcount = Number(sessionStorage.clickcount)+1;
      } else {
        sessionStorage.clickcount = 1;
      }
      smileWrapper.attr('data-close', sessionStorage.clickcount);
    }
  }

});
//});

// Custom JS to trigger the shrinking animation/effect on the local-nav when the user scrolls down (and the inverse when the user goes back to the top).
// Collapse Navbar
var navbarCollapse = function() {
  if ($('#mainNav').offset().top > 100) {
    $('#mainNav').addClass('navbar-shrink');
  } else {
    $('#mainNav').removeClass('navbar-shrink');
  }
};
  // Collapse now if page is not at top
navbarCollapse();
// Collapse the navbar when page is scrolled
$(window).scroll(navbarCollapse);

// Builds out the sub-navigation based on whe current URL of the user.
$(document).ready(function() {
  var currentUrl = window.location.href;
  // Remove the http(s):// protocol
  var noProto = currentUrl.replace(/(^\w+:|^)\/\//, '');
  // Remove the baseURL (foundation.kcc.edu)
  var noBase = noProto.replace('foundation.kcc.edu/', '');

  function writeSubNav() {
    var about = 'about',
      board = 'foundation-board',
      committees = 'committees';

    var scholar = 'scholarships',
      century = 'century-scholars',
      create = 'create-a-scholarship';

    var give = 'give',
      employee = 'employee-giving',
      planned = 'planned-giving',
      presidents = 'presidents-giving-circle',
      womens = 'womens-giving-circle';

    var events = 'events',
      annual = 'annual-scholarship-event',
      presidentsDinner = 'presidents-circle-dinner',
      swine = 'swine-wine-and-dine';

    var alumni = 'alumni',
      distinguished = 'distinguished-alumni-award',
      stories = 'alumni-stories';

    //console.log(noProto);

    function createList() {

      var listItemStart = '<li class="nav-item">',
        lastListItemStart = '<li class="nav-item active">',
        listItemClose = '</li>',
        // Links:
        linkStart = '<a href="',
        linkPostUrl = '" class="nav-link sub-nav__nav-link" style="text-transform: capitalize;">',
        linkClose = '</a>',
        srCurrent = ' <span class="sr-only">(current)</span>';

      var removeSlash = noBase.slice(0,-1);
      var urlArray = removeSlash.split(/\//),
        listString = [];

      var lastItem = urlArray[urlArray.length - 1];
      var arrayLength = urlArray.length;
      //console.log(lastItem);
      //console.log(arrayLength);

      if ( noBase.indexOf(about) > -1 ) {
        if ( noBase.indexOf(committees) > -1 ) {
          listString.push(
            lastListItemStart + linkStart + '../' + committees + linkPostUrl + committees + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + board + linkPostUrl + board.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(board) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + committees + linkPostUrl + committees + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + board + linkPostUrl + board.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
        } else {
          listString.push(
            listItemStart + linkStart + committees + linkPostUrl + committees + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + board + linkPostUrl + board.replace(/-/g, ' ') + linkClose + listItemClose
          );
        }
      }

      else if ( noBase.indexOf(scholar) > -1 ) {
        if ( noBase.indexOf(century) > -1 ) {
          listString.push(
            lastListItemStart + linkStart + '../' + century + linkPostUrl + century.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + create + linkPostUrl + create.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(create) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + century + linkPostUrl + century.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + create + linkPostUrl + create.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
        } else {
          listString.push(
            listItemStart + linkStart + century + linkPostUrl + century.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + create + linkPostUrl + create.replace(/-/g, ' ') + linkClose + listItemClose
          );
        }
      }

      else if ( noBase.indexOf(give) > -1 ) {
        if ( noBase.indexOf(employee) > -1 ) {
          listString.push(
            lastListItemStart + linkStart + '../' + employee + linkPostUrl + employee.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + planned + linkPostUrl + planned.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + presidents + linkPostUrl + presidents.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + womens + linkPostUrl + womens.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(planned) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + employee + linkPostUrl + employee.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + planned + linkPostUrl + planned.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + presidents + linkPostUrl + presidents.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + womens + linkPostUrl + womens.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(presidents) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + employee + linkPostUrl + employee.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + planned + linkPostUrl + planned.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + presidents + linkPostUrl + presidents.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + womens + linkPostUrl + womens.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(womens) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + employee + linkPostUrl + employee.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + planned + linkPostUrl + planned.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + presidents + linkPostUrl + presidents.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + womens + linkPostUrl + womens.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
        } else {
          listString.push(
            listItemStart + linkStart + employee + linkPostUrl + employee.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + planned + linkPostUrl + planned.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + presidents + linkPostUrl + presidents.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + womens + linkPostUrl + womens.replace(/-/g, ' ') + linkClose + listItemClose
          );
        }
      }

      else if ( noBase.indexOf(alumni) > -1 ) {
        if ( noBase.indexOf(distinguished) > -1 ) {
          listString.push(
            lastListItemStart + linkStart + '../' + distinguished + linkPostUrl + distinguished.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + stories + linkPostUrl + stories.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(stories) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + distinguished + linkPostUrl + distinguished.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + stories + linkPostUrl + stories.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
        } else {
          listString.push(
            listItemStart + linkStart + distinguished + linkPostUrl + distinguished.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + stories + linkPostUrl + stories.replace(/-/g, ' ') + linkClose + listItemClose
          );
        }
      }

      else if ( noBase.indexOf(events) > -1 ) {
        if ( noBase.indexOf(annual) > -1 ) {
          listString.push(
            lastListItemStart + linkStart + '../' + annual + linkPostUrl + annual.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + presidentsDinner + linkPostUrl + presidentsDinner.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + swine + linkPostUrl + swine.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(presidentsDinner) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + annual + linkPostUrl + annual.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + presidentsDinner + linkPostUrl + presidentsDinner.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + swine + linkPostUrl + swine.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(swine) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + annual + linkPostUrl + annual.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + presidentsDinner + linkPostUrl + presidentsDinner.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + swine + linkPostUrl + swine.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
        } else {
          listString.push(
            listItemStart + linkStart + annual + linkPostUrl + annual.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + presidentsDinner + linkPostUrl + presidentsDinner.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + swine + linkPostUrl + swine.replace(/-/g, ' ') + linkClose + listItemClose
          );
        }
      }
      document.getElementById('subNavNav').innerHTML = listString.join('');
    }
    createList();

  }

  if ( noProto !== 'foundation.kcc.edu/' && noProto !== 'foundation.kcc.edu/#contact' && noProto !== 'localhost:3000/' && noProto !== 'localhost:3000/#contact' ) {
    writeSubNav();
  }
});

// Replace all occurences of "--" (double hyphens) with "—" (long-em dash)
$(document).ready(function() {
  function walkText(node) {
    if (node.nodeType == 3) {
      node.data = node.data.replace(/--/g, '—');
    }
    if (node.nodeType == 1 && node.nodeName != 'SCRIPT') {
      for (var i = 0; i < node.childNodes.length; i++) {
        walkText(node.childNodes[i]);
      }
    }
  }
  walkText(document.body);
});

// Javascript to enable links/external-links to Bootstrap4 tab-nav's
// This provides a way to link to individual alumni stories and have that desired story active on the alumni-stories page when you get there.
$(document).ready(function() {
  var url = document.location.toString();
  if (url.match('#')) {
    $('.nav-tabs a[href="#'+url.split('#')[1]+'"]').tab('show') ;
  }

  // With HTML5 history API, we can easily prevent scrolling!
  $('.nav-tabs a').on('shown.bs.tab', function (e) {
    if(history.pushState) {
      history.pushState(null, null, e.target.hash);
    } else {
      window.location.hash = e.target.hash; //Polyfill for old browsers
    }
  });
});

$(document).ready(function() {
  // Custom JS to run code only when the scholarship application is open from November 1st to March 1st

  // Define a date to use in testing:
  var testDate = new Date();
  testDate.setDate(0);
  testDate.setMonth(2);
  testDate.setFullYear(2019);

  // feed 'test' throught the last if-statement in place of 'today'
  var test = testDate.getTime();

  var today = new Date(),
    currentYear = today.getFullYear(),
    currentMonth = today.getMonth(),
    start = new Date(), // Start date when scholarship registration is available (historicaly November 1st)
    end = new Date(); // Scholarship Application Deadline!!! (historicaly March 1st)

  today.getTime(); // Set todays date as a time string (time strings prefered for JS date comparisons)
  start.setDate(0); // set the start date (0 is the first of the month in JS)
  start.setMonth(10); // set the start month
  end.setDate(0); // set the end date
  end.setMonth(2); // set the end month

  //console.log(currentYear);
  //console.log(currentMonth);

  if ( currentMonth >= 0 && currentMonth <= 2 ) {
    // Set the scholarship end and start years depending on if the current date is after January 1st
    end.setFullYear( currentYear );
    start.setFullYear( currentYear - 1 );
  } else {
    end.setFullYear( currentYear + 1 );
    start.setFullYear( currentYear );
  }


  // Compare dates in the getTime() format
  // ======================

  // Run this if statement instead to test the testDate:
  //if ( test >= start.getTime() && test < end.getTime() ) {

  if ( today >= start.getTime() && today < end.getTime() ) {
    // Run code while the scholarship application is open (from November-1 to March-1)
    // If scholarships open show "Apply Now" buttons and link to scholarship form in modal
    //console.log('SCHOLARSHIP TIME');
    $('#applyNow').removeClass('jsScholarshipHidden').attr('aria-hidden', 'false');
    $('#viewScholarships').attr('aria-hidden', 'true');
    $('#formLink').removeClass('jsScholarshipHidden').attr('aria-hidden', 'false');
  } else {
    //console.log('No Scholarships');
    $('#viewScholarships').removeClass('jsScholarshipHidden').attr('aria-hidden', 'false');
    $('#applyNow').attr('aria-hidden', 'true');
  }
});

// Acordian.JS
// Allows anchor jump-link to work with with acordian function
//

$('.donateTarget').on('click', function() {
  $('#collapseOne').toggle('show').trigger('showCollapsed');
});

$('#collapseOne').on('showCollapsed', function() {
  $('#plusMinus').toggleClass('buttons__minus');
});

$('.rightsTarget').on('click', function() {
  $('#collapseTwo').toggle('show').trigger('showCollapsed2');
});

$('#collapseTwo').on('showCollapsed2', function() {
  $('#plusMinus2').toggleClass('buttons__minus');
});

$('.feesTarget').on('click', function() {
  $('#collapseThree').toggle('show').trigger('showCollapsed3');
});

$('#collapseThree').on('showCollapsed3', function() {
  $('#plusMinus3').toggleClass('buttons__minus');
});

// function toggleAccordian() {
//   var plusMinus = document.getElementById('plusMinus');
//   if (plusMinus.firstChild.nodeValue == '+') {
//     plusMinus.firstChild.nodeValue = '-';
//   } else {
//     plusMinus.firstChild.nodeValue = '+';
//   }
// }

// var member = document.getElementById('plusButton');
// member.addEventListener('click', toggleAccordian, false);

// $('#my-link2').click(function() {
//   $('#collapseTwo').collapse('hide');
//   $('#collapseTwo').collapse('show');
// });

// function toggleAccordian2() {
//   var plusMinus = document.getElementById('plusMinus2');
//   if (plusMinus.firstChild.nodeValue == '+') {
//     plusMinus.firstChild.nodeValue = '-';
//   } else {
//     plusMinus.firstChild.nodeValue = '+';
//   }
// }

// var trainer = document.getElementById('plusButton2');
// trainer.addEventListener('click', toggleAccordian2, false);
