// Custom JS for Slick img carousels

$('.hero-slider__slider').slick({
  dots: true,
  slidesToShow: 1,
  slidesToScroll: 1,
  autoplay: true,
  autoplaySpeed: 3000,
  prevArrow:'<img alt="" class="a-left control-c prev slick-prev" src="assets/img/dbl-prev.svg">',
  nextArrow:'<img alt="" class="a-right control-c next slick-next" src="assets/img/dbl-next.svg">'
});

// Lazy load images
// ex. <img data-src="/path/to/image.jpg" alt="">
$(document).ready(function(){
  (function() {
    [].forEach.call(document.querySelectorAll('img[data-src]'), function(img) {
      img.setAttribute('src', img.getAttribute('data-src'));
      img.onload = function() {
        img.removeAttribute('data-src');
      };
    });
  })();
});

// Highlights the current page in local navigation bar
$(document).ready(function () {
  var currentUrl = window.location.href;
  var noProto = currentUrl.replace(/(^\w+:|^)\/\//, '');
  $('#navbarSupportedContent').find('.active').removeClass('active');
  if (noProto == 'foundation.kcc.edu/') {
    $('#home').addClass('active');
  } else if (currentUrl.indexOf('/events/') > -1) {
    $('#events').addClass('active');
  } else if (currentUrl.indexOf('/about/') > -1) {
    $('#about').addClass('active');
  } else if (currentUrl.indexOf('/alumni/') > -1) {
    $('#alumni').addClass('active');
  } else if (currentUrl.indexOf('/scholarships/') > -1) {
    $('#scholarships').addClass('active');
  } else if (currentUrl.indexOf('#contact') > -1) {
    $('#home').addClass('active');
  }
});

// Custom JS to animate and show the shop Amazon Smile widget
// ===================================================================
$(document).ready(function () {

  var smileWrapper = $('#shopSmileWrapper');

  //function addShaddow() {
  //  var smileTab = $('#smileTab');
  //  setTimeout(function(){
  //    smileTab.addClass('shop-smile__tab--shaddow');
  //  }, 1200);
  //}
  //function removeShaddow() {
  //  var smileTab = $('#smileTab');
  //  smileTab.removeClass('shop-smile__tab--shaddow');
  //}

  if( sessionStorage.clickcount == undefined ) { // if the clickcount is undefined:
    // set the clickcount to 0:
    sessionStorage.clickcount = 0;
  }

  smileWrapper.attr('data-close', sessionStorage.clickcount);

  function animateIn() {
    // Function to animate the slide-in of the amazon smile slide-box
    var deferShowShopSmile = $.Deferred();

    $.when(deferShowShopSmile).done(function() {
      smileWrapper.addClass('shop-smile__wrapper--show');
    });

    function animateShopSmile() {
      smileWrapper.addClass('shop-smile__wrapper--slide-in');
      //$('#greyOut').addClass('shop-smile__grey-out--animate')
      //  .addClass('shop-smile__grey-out--show');
      deferShowShopSmile.resolve();
    }
    animateShopSmile();
  }

  // Run the slide-box animation on page-load after a delay:
  function showShopSmile() {
    if ( smileWrapper.attr('data-close') == 0 ) {
      setTimeout(function(){
        //removeShaddow();
        animateIn();
      }, 2000);
    }
  }
  //  if( localStorage.getItem('user_visted') != 'true' ){
  showShopSmile();
  //    localStorage.setItem('user_visted', 'true');
  //  }

  // Closing the amazon smile slide-box
  function closeSmileWidget() {
    $('#exitButton').click(function() {
      smileWrapper.removeClass('shop-smile__wrapper--slide-in');
      smileWrapper.removeClass('shop-smile__wrapper--show');
      smileWrapper.addClass('shop-smile__wrapper--slide-out');
      clickCounter();
      //$('#greyOut').removeClass('shop-smile__grey-out--animate')
      //  .addClass('shop-smile__grey-out--animate-out')
      //  .removeClass('shop-smile__grey-out--show');
      //addShaddow();
    });
  }
  closeSmileWidget();

  // Reopening the slide-box by clicking it's minimized tab:
  function openSmile() {
    $('#openSmile').on('click', function() {
      console.log('clicked');
      var wrapperClasses = smileWrapper.hasClass('shop-smile__wrapper--show');
      console.log(wrapperClasses);
      if ( wrapperClasses == true ) {
        console.log('show');
        smileWrapper.removeClass('shop-smile__wrapper--slide-in');
        smileWrapper.removeClass('shop-smile__wrapper--show');
        //addShaddow();
        smileWrapper.addClass('shop-smile__wrapper--slide-out');
        clickCounter();
      } else {
        console.log('NO');
        smileWrapper.removeClass('shop-smile__wrapper--slide-out');
        //removeShaddow();
        animateIn();
      }
    });
  }
  openSmile();

  function clickCounter() {
    if(typeof(Storage) !== 'undefined') {
      if (sessionStorage.clickcount) {
        sessionStorage.clickcount = Number(sessionStorage.clickcount)+1;
      } else {
        sessionStorage.clickcount = 1;
      }
      smileWrapper.attr('data-close', sessionStorage.clickcount);
    }
  }

});
//});

$(document).ready(function() {
  if (typeof(Storage) !== "undefined") {
    // Code for localStorage/sessionStorage.
    console.log('Browser can do localStorage');
} else {
    // Sorry! No Web Storage support..
    console.log('Sorry! No Web Storage support..');
}
});

// Collapse Navbar
var navbarCollapse = function() {
  if ($('#mainNav').offset().top > 100) {
    $('#mainNav').addClass('navbar-shrink');
  } else {
    $('#mainNav').removeClass('navbar-shrink');
  }
};
  // Collapse now if page is not at top
navbarCollapse();
// Collapse the navbar when page is scrolled
$(window).scroll(navbarCollapse);

$(document).ready(function() {
  var currentUrl = window.location.href;
  // Remove the http(s):// protocol
  var noProto = currentUrl.replace(/(^\w+:|^)\/\//, '');
  // Remove the baseURL (foundation.kcc.edu)
  var noBase = noProto.replace('foundation.kcc.edu/', '');

  if ( noProto !== 'foundation.kcc.edu/' && noProto !== 'foundation.kcc.edu/#contact' && noProto !== 'localhost:3000/' && noProto !== 'localhost:3000/#contact' ) {

  function writeSubNav() {
    var about = 'about',
      board = 'foundation-board',
      donors = 'donors',
      committees = 'committees';

    var scholar = 'scholarships',
      century = 'century-scholars',
      create = 'create-a-scholarship';

    var give = 'give',
      employee = 'employee-giving',
      planned = 'planned-giving',
      presidents = 'presidents-giving-circle',
      womens = 'womens-giving-circle';

    var events = 'events',
      special = 'special-events';

    var alumni = 'alumni',
      distinguished = 'distinguished-alumni-award';

    console.log(noProto);

    function createList() {

      var listItemStart = '<li class="nav-item">',
        lastListItemStart = '<li class="nav-item active">',
        listItemClose = '</li>',
        // Links:
        linkStart = '<a href="',
        linkPostUrl = '" class="nav-link sub-nav__nav-link" style="text-transform: capitalize;">',
        linkClose = '</a>',
        srCurrent = ' <span class="sr-only">(current)</span>';

      var removeSlash = noBase.slice(0,-1);
      var urlArray = removeSlash.split(/\//),
        listString = [];

      var lastItem = urlArray[urlArray.length - 1];
      var arrayLength = urlArray.length;
      console.log(lastItem);
      console.log(arrayLength);

      if ( noBase.indexOf(about) > -1 ) {
        if ( noBase.indexOf(committees) > -1 ) {
          listString.push(
            lastListItemStart + linkStart + '../' + committees + linkPostUrl + committees + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + donors + linkPostUrl + donors + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + board + linkPostUrl + board.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(donors) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + committees + linkPostUrl + committees + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + donors + linkPostUrl + donors + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + board + linkPostUrl + board.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(board) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + committees + linkPostUrl + committees + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + donors + linkPostUrl + donors + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + board + linkPostUrl + board.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
        } else {
          listString.push(
            listItemStart + linkStart + committees + linkPostUrl + committees + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + donors + linkPostUrl + donors + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + board + linkPostUrl + board.replace(/-/g, ' ') + linkClose + listItemClose
          );
        }
      }

      else if ( noBase.indexOf(scholar) > -1 ) {
        if ( noBase.indexOf(century) > -1 ) {
          listString.push(
            lastListItemStart + linkStart + '../' + century + linkPostUrl + century.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + create + linkPostUrl + create.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(create) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + century + linkPostUrl + century.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + create + linkPostUrl + create.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
        } else {
          listString.push(
            listItemStart + linkStart + century + linkPostUrl + century.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + create + linkPostUrl + create.replace(/-/g, ' ') + linkClose + listItemClose
          );
        }
      }

      else if ( noBase.indexOf(give) > -1 ) {
        if ( noBase.indexOf(employee) > -1 ) {
          listString.push(
            lastListItemStart + linkStart + '../' + employee + linkPostUrl + employee.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + planned + linkPostUrl + planned.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + presidents + linkPostUrl + presidents.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + womens + linkPostUrl + womens.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(planned) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + employee + linkPostUrl + employee.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + planned + linkPostUrl + planned.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + presidents + linkPostUrl + presidents.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + womens + linkPostUrl + womens.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(presidents) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + employee + linkPostUrl + employee.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + planned + linkPostUrl + planned.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + presidents + linkPostUrl + presidents.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + womens + linkPostUrl + womens.replace(/-/g, ' ') + linkClose + listItemClose
          );
        } else if ( noBase.indexOf(womens) > -1 ) {
          listString.push(
            listItemStart + linkStart + '../' + employee + linkPostUrl + employee.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + planned + linkPostUrl + planned.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + '../' + presidents + linkPostUrl + presidents.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            lastListItemStart + linkStart + '../' + womens + linkPostUrl + womens.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
        } else {
          listString.push(
            listItemStart + linkStart + employee + linkPostUrl + employee.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + planned + linkPostUrl + planned.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + presidents + linkPostUrl + presidents.replace(/-/g, ' ') + linkClose + listItemClose
          );
          listString.push(
            listItemStart + linkStart + womens + linkPostUrl + womens.replace(/-/g, ' ') + linkClose + listItemClose
          );
        }
      }

      else if ( noBase.indexOf(alumni) > -1 ) {
        if ( noBase.indexOf(distinguished) > -1 ) {
          listString.push(
            lastListItemStart + linkStart + '../' + distinguished + linkPostUrl + distinguished.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
        } else {
          listString.push(
            listItemStart + linkStart + distinguished + linkPostUrl + distinguished.replace(/-/g, ' ') + linkClose + listItemClose
          );
        }
      }

      else if ( noBase.indexOf(events) > -1 ) {
        if ( noBase.indexOf(special) > -1 ) {
          listString.push(
            lastListItemStart + linkStart + '../' + special + linkPostUrl + special.replace(/-/g, ' ') + srCurrent + linkClose + listItemClose
          );
        } else {
          listString.push(
            listItemStart + linkStart + special + linkPostUrl + special.replace(/-/g, ' ') + linkClose + listItemClose
          );
        }
      }
      document.getElementById('subNavNav').innerHTML = listString.join('');
    }
    createList();

  }

  writeSubNav();
  }
});
